@using eStore.Services
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">eStore</a>
    </div>
</div>

<div>
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        @if (isAuthenticated)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="profile">
                    <span class="oi oi-person" aria-hidden="true"></span> Profile
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <a class="nav-link" @onclick="Logout" style="cursor: pointer">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                </a>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Login
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool isAuthenticated;

    [Inject]
    private AuthService AuthService { get; set; }

    [Inject]
    private NavigationManager NavigationManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        isAuthenticated = await AuthService.IsAuthenticated();
    }

    private async Task Logout()
    {
        await AuthService.Logout();
        NavigationManager.NavigateTo("/login", true);
    }
}