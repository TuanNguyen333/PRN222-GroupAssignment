@page "/my-information"
@using eStore.Models
@using eStore.Services
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.Extensions.Logging
@rendermode InteractiveServer
@inject IMemberService MemberService
@inject NavigationManager NavigationManager
@inject ILogger<MyInformation> Logger

<PageTitle>My Information</PageTitle>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">My Information</h3>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(message))
                    {
                        <div class="alert @messageClass" role="alert">
                            @message
                        </div>
                    }

                    @if (isLoading)
                    {
                        <div class="text-center">
                            <div class="spinner-border" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                    }
                    else if (member != null)
                    {
                        <dl class="row">
                            <dt class="col-sm-4">Member ID</dt>
                            <dd class="col-sm-8">@member.MemberId</dd>

                            <dt class="col-sm-4">Email</dt>
                            <dd class="col-sm-8">@member.Email</dd>

                            <dt class="col-sm-4">Company Name</dt>
                            <dd class="col-sm-8">@member.CompanyName</dd>

                            <dt class="col-sm-4">City</dt>
                            <dd class="col-sm-8">@member.City</dd>

                            <dt class="col-sm-4">Country</dt>
                            <dd class="col-sm-8">@member.Country</dd>
                        </dl>

                        <div class="mt-4">
                            <a href="/members/edit/@member.MemberId" class="btn btn-primary">
                                <i class="bi bi-pencil"></i> Edit Profile
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Member? member;
    private string message = string.Empty;
    private string messageClass = string.Empty;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadMemberInfo();
    }

    private async Task LoadMemberInfo()
    {
        try
        {
            isLoading = true;
            message = string.Empty;
            messageClass = string.Empty;

            Logger.LogInformation("Loading current user information");
            var response = await MemberService.GetCurrentUserAsync();

            if (response.Success && response.Data != null)
            {
                member = response.Data;
                Logger.LogInformation("Successfully loaded user information");
            }
            else
            {
                message = response.Message ?? "Failed to load user information";
                messageClass = "alert-danger";
                Logger.LogWarning("Failed to load user information: {Message}", response.Message);
            }
        }
        catch (HttpRequestException ex)
        {
            message = "Unable to connect to server. Please check your connection and try again.";
            messageClass = "alert-danger";
            Logger.LogError(ex, "Network error while loading user information");
        }
        catch (Exception ex)
        {
            message = "An error occurred while loading your information. Please try again later.";
            messageClass = "alert-danger";
            Logger.LogError(ex, "Error loading user information");
        }
        finally
        {
            isLoading = false;
        }
    }
} 