@page "/categories/edit/{CategoryId:int}"
@rendermode InteractiveServer
@using eStore.Models
@using eStore.Services
@inject NavigationManager NavigationManager
@inject ICategoryService CategoryService

<PageTitle>Edit Category</PageTitle>

<h1>Edit</h1>

<h2>Category</h2>
<hr />

@if (errorMessage != null)
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}

@if (isLoading)
{
    <p><em>Loading...</em></p>
}
else if (Category is null)
{
    <p>Category not found.</p>
    <a href="/categories" class="btn btn-secondary">Back to List</a>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm method="post" Model="Category" OnValidSubmit="UpdateCategory" FormName="edit">
                <DataAnnotationsValidator />
                <ValidationSummary role="alert" class="text-danger" />
                <input type="hidden" name="CategoryId" value="@CategoryId" />
                <div class="mb-3">
                    <label for="categoryname" class="form-label">Category Name:</label>
                    <InputText id="categoryname" @bind-Value="Category.CategoryName" class="form-control" />
                    <ValidationMessage For="() => Category.CategoryName" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="description" class="form-label">Description:</label>
                    <InputText id="description" @bind-Value="Category.Description" class="form-control" />
                    <ValidationMessage For="() => Category.Description" class="text-danger" />
                </div>
                <button type="submit" class="btn btn-primary" disabled="@isSubmitting">
                    @if (isSubmitting)
                    {
                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                        <span> Saving...</span>
                    }
                    else
                    {
                        <span>Save</span>
                    }
                </button>
                <a href="/categories" class="btn btn-secondary ms-2">Cancel</a>
            </EditForm>
        </div>
    </div>
}

@code {
    [Parameter]
    public int CategoryId { get; set; }

    private Category? Category { get; set; }
    private bool isLoading = true;
    private bool isSubmitting = false;
    private string? errorMessage = null;

    protected override async Task OnInitializedAsync()
    {
        await LoadCategory();
    }

    private async Task LoadCategory()
    {
        try
        {
            isLoading = true;
            errorMessage = null;

            Category = await CategoryService.GetCategoryByIdAsync(CategoryId);
            if (Category is null)
            {
				NavigationManager.NavigateTo("notfound");
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading category: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task UpdateCategory()
    {
        try
        {
            isSubmitting = true;
            errorMessage = null;

            var result = await CategoryService.UpdateCategoryAsync(CategoryId, Category);

            if (result != null)
            {
                NavigationManager.NavigateTo("/categories");
            }
            else
            {
                errorMessage = "Failed to update category. Please try again.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
        finally
        {
            isSubmitting = false;
        }
    }
}